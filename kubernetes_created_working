apiVersion: v1
kind: Service
metadata:
  name: loksai-eta-np-service
  labels:
    app: loksai-eta-app
spec:
  selector:
    app: loksai-eta-deploy-lbl

  type: NodePort
  ports:
  - nodePort: 31028
    port: 8080
    targetPort: 8080



Pipeline full


pipeline {

    agent { label 'Slave' }

	environment {	
		DOCKERHUB_CREDENTIALS=credentials('dockerid')
	}
	
    stages {
        stage('SCM_Checkout') {
            steps {
                echo 'Perform SCM Checkout'
				git 'https://github.com/nkashwini97/java-webapp-project.git'
            }
        }
        stage('Application Build') {
            steps {
                echo 'Perform Application Build'
				sh 'mvn clean package'
				
            }
        }
        stage('Docker Build') {
            steps {
                echo 'Perform Docker Build'
				sh "docker build -t 95ashwini/ashu-webapp:${BUILD_NUMBER} ."
				sh "docker tag 95ashwini/ashu-webapp:${BUILD_NUMBER} 95ashwini/ashu-webapp:latest"
				sh 'docker image list'
            }
        }
        stage('Login to Dockerhub') {
            steps {
                echo 'Login to DockerHub'				
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                
            }
        }
        stage('Publish the Image to Dockerhub') {
            steps {
                echo 'Publish to DockerHub'
				sh "docker push 95ashwini/ashu-webapp:latest"                
            }
        }
        stage('Deploy to Kubernetes Cluster') {
            steps {
				script {
				sshPublisher(publishers: [sshPublisherDesc(configName: 'Kubernete', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'kubectl apply -f kdeploy.yaml', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '.', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '*.yaml')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
			}				          
            }
        }
    }
}



apiVersion: apps/v1
kind: Deployment
metadata:
  name: ashwini-deploy
  labels:
    app: ashwini-deploy-lbl
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ashwini-app
  template:
    metadata:
      labels:
        app: ashwini-app
    spec:
      containers:
      - name: ashwini-container
        image: 95ashwini/ashu-webapp
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: ashwini-np-service
  labels:
    app: ashwini-app
spec:
  selector:
    app: ashwini-deploy-lbl

  type: NodePort
  ports:
  - nodePort: 31028
    port: 8080
    targetPort: 8080
